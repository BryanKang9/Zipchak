<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.FeedMapper">
    <insert id="insertFeed" parameterType="FeedDto">
        insert into fd (ur_num,fd_title,fd_txt,fd_img,fd_spc,fd_wdate,fd_rdcnt,fd_lvtp,fd_fml,fd_style)
        values (#{ur_num},#{fd_title},#{fd_txt},#{fd_img},#{fd_spc},now(),0,#{fd_lvtp},#{fd_fml},#{fd_style});
    </insert>
    <delete id="deleteFeed" parameterType="int">
        delete from fd where fd_num=#{fd_num}
    </delete>
    <!-- img는 값이 선택될 경우에만 업데이트. -->
    <update id="updateFeed" parameterType="FeedDto">
        update fd set fd_title=#{fd_title},fd_txt=#{fd_txt},fd_spc=#{fd_spc},
                      fd_udate=now(),fd_lvtp=#{fd_lvtp},fd_fml=#{fd_fml},fd_style=#{fd_style}
        <if test="fd_img!=null">
            ,fd_img=#{fd_img}
        </if>
        where fd_num=#{fd_num}
    </update>
    <!-- order_col: 정렬기준, search_col: 검색내용찾을컬럼, search_word: 검색단어 -->
    <!--  prf와 likes 합친 Join 버전  -->
    <select id="getAllFeeds" parameterType="Map" resultType="FeedListDto">
        SELECT a.fd_num, a.fd_title, c.prf_nick, c.prf_img, a.fd_txt,a.fd_img, a.fd_wdate,a.fd_rdcnt, a.fd_style, count(b.ur_num) as fd_likes
        from fd a
        left outer join fd_like b
        on a.fd_num=b.fd_num
        left outer join ur_prf c
        on a.ur_num=c.ur_num
        <if test="(search_col != null and search_word !=null) and (!(search_col.equals('')) and !(search_word.equals(''))) ">
            where ${search_col} like concat('%',#{search_word},'%')
        </if>
        group by a.fd_num
        <if test="(order_col != null and !(order_col.equals(''))) ">
        order by ${order_col} desc
        </if>

    </select>
    <select id="getFeedByNum" parameterType="int" resultType="FeedDto">
        select * from fd where fd_num=#{fd_num}
    </select>

    <!--  피드 좋아요 insert  -->
    <insert id="insertFeedLike" parameterType="Map">
        insert into fd_like values (#{ur_num},#{fd_num})
    </insert>
    <!--  피드 좋아요 delete  -->
    <delete id="deleteFeedLike" parameterType="Map">
        delete from fd_like where fd_num=#{fd_num} and ur_num=#{ur_num}
    </delete>
    <!--  피드 좋아요 수 조회  -->
    <select id="getFeedLikes" parameterType="int" resultType="int">
        select count(ur_num) as fd_likes from fd_like where fd_num=#{fd_num};
    </select>
    <!--  피드 좋아요 여부 조회 -> 좋아요 했으면 1, 안했으면 0  -->
    <select id="checkFeedLike" parameterType="Map" resultType="int">
        select count(ur_num) as fd_like from fd_like where ur_num=#{ur_num} and fd_num=#{fd_num};
    </select>
    <!--  피드 조회수 업데이트  -->
    <update id="updateReadCount" parameterType="int">
        update fd set fd_rdcnt=fd_rdcnt+1 where fd_num=#{fd_num}
    </update>

    <!-- 피드 최신 번호 가져오기 -->
    <select id="getRecentFeedNum" resultType="int">
        select ifnull(max(fd_num),0) from fd
    </select>
    <!-- 피드 이미지 테이블 삽입 -->
    <insert id="insertFeedImage" parameterType="Map">
        insert into fd_img (fd_num,img_name) values (#{fd_num},#{img_name})
    </insert>
</mapper>